{"version":3,"sources":["actions/pokemonActions.jsx","containers/PokemonList.jsx","containers/StatsBar.jsx","containers/Pokemon.jsx","App.js","reportWebVitals.js","reducers/PokemonListReducer.jsx","reducers/PokemonMultipleReducer.jsx","reducers/RootReducer.jsx","Store.jsx","index.js"],"names":["GetPokemonList","page","dispatch","a","type","offset","axios","get","res","payload","data","PokemonList","props","useState","search","setSearch","useDispatch","pokemonList","useSelector","state","useEffect","FetchData","className","name","placeholder","onChange","event","target","value","onClick","history","push","loading","_","isEmpty","errorMsg","map","el","i","to","pageCount","Math","ceil","count","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selected","containerClassName","StatsBar","stats","pokemon","pokemonStat","statsObj","base_stat","pokemonStatName","stat","console","log","labels","datasets","label","backgroundColor","scale","ticks","beginAtZero","max","min","stepSize","height","width","Pokemon","pokemonName","match","params","pokemonState","React","pokeData","src","sprites","front_default","alt","back_default","front_shiny","back_shiny","abilities","ability","ShowData","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DefaultState","PokemonListReducer","action","results","PokemonMultipleReducer","RootReducer","combineReducers","Store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.bbf8385e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const GetPokemonList = (page) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: \"POKEMON_LIST_LOADING\"\r\n        });\r\n\r\n        const perPage = 15;\r\n        const offset = (page * perPage) - perPage;\r\n        // 1 = 0 1*15 - 15 = 0\r\n        // 2 = 15 2*15 - 15 = 15 \r\n        // 2 = 30 3*15 - 15 = 30 \r\n        const res = await axios.get(`https://pokeapi.co/api/v2/pokemon?limit=${perPage}&offset=${offset}`)\r\n\r\n        dispatch({\r\n            type: \"POKEMON_LIST_SUCCESS\",\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"POKEMON_LIST_FAIL\",\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const GetPokemon = (pokemon) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: \"POKEMON_MULTIPLE_LOADING\"\r\n        });\r\n\r\n        const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon}`)\r\n\r\n        dispatch({\r\n            type: \"POKEMON_MULTIPLE_SUCCESS\",\r\n            payload: res.data,\r\n            pokemonName: pokemon\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"POKEMON_MULTIPLE_FAIL\",\r\n        })\r\n        \r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport {GetPokemonList} from \"../actions/pokemonActions\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\n\r\n\r\nconst PokemonList = (props) => {\r\n    const [search, setSearch] = useState(\"\")\r\n    const dispatch = useDispatch();\r\n    const pokemonList = useSelector(state => state.PokemonList);\r\n\r\n    useEffect(() => {\r\n        FetchData(1)\r\n    }, []);\r\n\r\n    const FetchData = (page = 1) => {\r\n        dispatch(GetPokemonList(page))\r\n    }\r\n\r\n    const ShowData = () => {\r\n\r\n        if(pokemonList.loading) {\r\n            return <p>Loading . . .</p>\r\n        }\r\n\r\n        if (!_.isEmpty(pokemonList.data)) {\r\n            return(\r\n                <div className={\"list-wrapper\"}>\r\n                {pokemonList.data.map((el, i) => {\r\n                    return(\r\n                    <div className={\"pokemon-item\"}>\r\n                        <p key={i}>{el.name}</p>\r\n                        <Link  to={`/pokemon/${el.name}`}>View</Link>\r\n                    </div>\r\n                    )\r\n                })}\r\n                </div>\r\n            )\r\n        }\r\n\r\n    \r\n        if(pokemonList.errorMsg !== \"\") {\r\n            return <p>{pokemonList.errorMsg}</p>\r\n        }\r\n\r\n        return <p>Unable to get data</p>\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={\"search-wrapper\"}>        \r\n                <input type=\"text\" name=\"search\" placeholder=\"Pokemon name!\" onChange={ event => setSearch(event.target.value)}/>\r\n                <button onClick={() => props.history.push(`/pokemon/${search}`)}>Search</button>\r\n            </div>\r\n                {ShowData()}\r\n                {!_.isEmpty(pokemonList.data) && (\r\n                    <ReactPaginate\r\n                        pageCount={Math.ceil(pokemonList.count/15)}\r\n                        pageRangeDisplayed={2}\r\n                        marginPagesDisplayed={1}\r\n                        onPageChange={(data) => FetchData(data.selected + 1)}\r\n                        containerClassName={\"pagination\"}\r\n                    />\r\n                )}\r\n            </div>\r\n    );\r\n};\r\n\r\n\r\nexport default PokemonList;","import React from 'react';\r\nimport {Bar, Radar} from \"react-chartjs-2\";\r\n\r\n\r\nconst StatsBar = ({pokemon: { stats  }}) => {\r\n\r\n    const pokemonStat = stats.map( statsObj => statsObj.base_stat)\r\n    const pokemonStatName = stats.map( statsObj => statsObj.stat.name)\r\n    console.log(\"pokemon stat\",pokemonStat)\r\n    console.log(\"pokemon stat name\",pokemonStatName)\r\n    // console.log(\"this is pokemon stats: \",stats)\r\n    console.log(\"stat 1\",pokemonStat[0])\r\n    return (\r\n        <>\r\n            \r\n            <div>\r\n                <Radar\r\n                    data={{\r\n                        \r\n                        labels: [pokemonStatName[0],pokemonStatName[1],pokemonStatName[2],pokemonStatName[3],pokemonStatName[4],pokemonStatName[5]],\r\n                        datasets: [{\r\n                            label: \"Stat Value\",\r\n                            data: [pokemonStat[0],pokemonStat[1],pokemonStat[2],pokemonStat[3],pokemonStat[4],pokemonStat[5]],\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 0.2)',\r\n                                'rgba(54, 162, 235, 0.2)',\r\n                                'rgba(255, 206, 86, 0.2)',\r\n                                'rgba(75, 192, 192, 0.2)',\r\n                                'rgba(153, 102, 255, 0.2)',\r\n                                'rgba(255, 159, 64, 0.2)'\r\n                            ],\r\n                        }],\r\n                        \r\n                        \r\n                }}\r\n                    scale={{\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            max: 5,\r\n                            min: 0,\r\n                            stepSize: 1\r\n                        }\r\n                    }}\r\n                    height={400}\r\n                    width={400}\r\n                />\r\n            </div>\r\n            <div>\r\n            \r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default StatsBar;","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {GetPokemon} from \"../actions/pokemonActions\";\r\nimport _ from \"lodash\";\r\nimport StatsBar from \"./StatsBar\";\r\n\r\nconst Pokemon = (props) => {\r\nconst pokemonName = props.match.params.pokemon;\r\nconst dispatch = useDispatch();\r\nconst pokemonState = useSelector(state => state.Pokemon);\r\n\r\nReact.useEffect(() => {\r\n    dispatch(GetPokemon(pokemonName))\r\n}, []);\r\n\r\nconst ShowData = () => {\r\n    if (!_.isEmpty(pokemonState.data[pokemonName])) {\r\n        const pokeData = pokemonState.data[pokemonName];\r\n        return(\r\n        <div className={\"pokemon-wrapper\"}>\r\n            <div className={\"item\"}>\r\n                <h1>Sprites</h1>\r\n                <img src={pokeData.sprites.front_default} alt=\"\"/>\r\n                <img src={pokeData.sprites.back_default} alt=\"\"/>\r\n                <img src={pokeData.sprites.front_shiny} alt=\"\"/>\r\n                <img src={pokeData.sprites.back_shiny} alt=\"\"/>\r\n            </div>\r\n        <div className=\"item\">\r\n            <h1>Stats</h1>\r\n            <StatsBar  pokemon={pokeData}/>\r\n        </div>\r\n        <div className=\"item\">\r\n            <h1>Abilities</h1>\r\n            {pokeData.abilities.map((el, i) => {\r\n                return <p key={i}>{el.ability.name}</p>\r\n            })}\r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    if (pokemonState.loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    if (pokemonState.errorMsg !== \"\") {\r\n        return <p>{pokemonState.errorMsg}</p>\r\n    }\r\n\r\n    return <p>error getting pokemon</p>\r\n}\r\n\r\n    return(\r\n    <div className={\"poke\"}>\r\n        <h1>{pokemonName}</h1>\r\n        {ShowData()}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Pokemon","import {Switch, Route, NavLink, Redirect} from \"react-router-dom\";\nimport './App.css';\nimport PokemonList from \"./containers/PokemonList\";\nimport Pokemon from \"./containers/Pokemon\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav>\n        <NavLink to={\"/pokemon/test\"}></NavLink>\n      </nav>\n\n\n      <Switch>\n        <Route path={\"/\"} exact component={PokemonList} />\n        <Route path={\"/pokemon/:pokemon\"} exact component={Pokemon} />\n         <Redirect to={\"/\"} /> {/*Acts as a default route */}\n      </Switch>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const DefaultState = {\r\n    loading: false,\r\n    data: [],\r\n    errorMsg: \"\",\r\n    count: 0\r\n};\r\n\r\nconst PokemonListReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case \"POKEMON_LIST_LOADING\":\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            errorMsg: \"\"\r\n        };\r\n        case \"POKEMON_LIST_FAIL\":\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            errorMsg: \"unable to get pokemon\"\r\n        };\r\n        case \"POKEMON_LIST_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            data: action.payload.results,\r\n            errorMsg: \"\",\r\n            count: action.payload.count\r\n        };\r\n        default:\r\n        return state\r\n    }\r\n};\r\n\r\nexport default PokemonListReducer","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n};\r\n\r\nconst PokemonMultipleReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case \"POKEMON_MULTIPLE_LOADING\":\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            errorMsg: \"\"\r\n        };\r\n        case \"POKEMON_MULTIPLE_FAIL\":\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            errorMsg: \"unable to find pokemon\"\r\n        };\r\n        case \"POKEMON_MULTIPLE_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            errorMsg: \"\",\r\n            data: {\r\n                ...state.data,\r\n                [action.pokemonName]: action.payload\r\n            }\r\n        };\r\n        default:\r\n        return state\r\n    }\r\n};\r\n\r\nexport default PokemonMultipleReducer","import {combineReducers} from \"redux\";\r\nimport PokemonListReducer from \"./PokemonListReducer\";\r\nimport PokemonMultipleReducer from \"./PokemonMultipleReducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n    PokemonList: PokemonListReducer,\r\n    Pokemon: PokemonMultipleReducer\r\n});\r\n\r\nexport default RootReducer;","import {createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport RootReducer from \"./reducers/RootReducer\";\r\n\r\nconst Store = createStore(RootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default Store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport Store from \"./Store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={Store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}